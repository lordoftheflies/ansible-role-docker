---
- name: "Remove excluded linux packages"
  become: yes
  package:
    name: "{{ items }}"
    state: absent
  with_items: "{{ ansible_role_docker.excluded_linux_packages }}"

- name: "Install included linux packages"
  become: yes
  package:
    name: "{{ items }}"
    state: present
  with_items: "{{ ansible_role_docker.included_linux_packages }}"


- name: "Add an Apt signing key, will not download if present"
  become: yes
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: "Add Docker Linux repository for {{ ansible_distribution }} {{ ansible_distribution_release }}."
  become: yes
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: "Install custom linux packages"
  become: yes
  package:
    name: "{{ items }}"
    state: present
  with_items: "{{ ansible_role_docker.custom_linux_packages }}"

- name: Create a data container
  docker_container:
    name: review-container
    image: hello-world
    volumes:
      - /data

- name: "Ensure group for Docker exists"
  become: yes
  group:
    name: docker
    state: present

- name: "Add default docker user."
  become: yes
  user:
    name: docker
    shell: /bin/bash
    group: docker
    state: present

- name: "Remove working directory"
  become: yes
  file:
    path: "{{ ansible_role_docker.variables_directory }}"
    state: absent

- name: "Add working directory"
  become: yes
  file:
    path: "{{ ansible_role_docker.variables_directory }}"
    state: directory

- name: "Enable docker-socket service"
  become: yes
  systemd:
    name: docker.socket
    state: restarted
    enabled: yes

- name: "Enable docker service"
  become: yes
  systemd:
    name: docker.service
    state: restarted
    enabled: yes

- name: "Configuring remote access with daemon.json"
  become: yes
  template:
    backup: yes
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    state: present
  when: ansible_role_docker.listening_hosts is defined
  with_items: "{{ ansible_role_docker.listening_hosts }}"
  tags:
    - cherubits
    - common
    - fqdn
- name: "Enhance grub"
  become: yes
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"